{
    "project": {
        "name": "elq",
        "description": "element query parser",
        "version": "0.3.0",
        "url": "http://"
    },
    "files": {
        "src/elq.src.js": {
            "name": "src/elq.src.js",
            "modules": {},
            "classes": {
                "elq": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "elq": {
            "name": "elq",
            "shortname": "elq",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/elq.src.js",
            "line": 9,
            "description": "Parses CSS for element queries and implements them with JavaScript",
            "params": [
                {
                    "name": "elq",
                    "description": "The elq module for loose augmentation",
                    "type": "Object"
                },
                {
                    "name": "document",
                    "description": "document object for DOM manipulation",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The augmented elq module",
                "type": "Object"
            }
        }
    },
    "classitems": [
        {
            "file": "src/elq.src.js",
            "line": 1,
            "title": "elq.js",
            "overview": "Parses CSS for element queries, supports them in JavaScript",
            "copyright": "(c) 2014",
            "license": "CC BY (http://creativecommons.org/licenses/by/4.0/)",
            "author": "Art Lawry",
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 23,
            "description": "Allows pre-processing after a window resize with less resources",
            "itemtype": "property",
            "name": "respondTimeout",
            "access": "private",
            "tagname": "",
            "type": "Object",
            "default": "undefined",
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 33,
            "description": "Default value for milliseconds after a resize/orientation to respond",
            "itemtype": "property",
            "name": "respondAfter",
            "access": "private",
            "tagname": "",
            "type": "Number",
            "default": "100",
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 43,
            "description": "The number of links remaining to be fetched and rendered locally",
            "itemtype": "property",
            "name": "remainingLinks",
            "access": "private",
            "tagname": "",
            "type": "Number",
            "default": "0",
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 53,
            "description": "A hash of cached links to avoid re-fetching",
            "itemtype": "property",
            "name": "cachedLinks",
            "access": "private",
            "tagname": "",
            "type": "Object",
            "default": "{}",
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 63,
            "description": "A hash of registered media queries to avoid duplication",
            "itemtype": "property",
            "name": "registeredSelectors",
            "access": "private",
            "tagname": "",
            "type": "Object",
            "default": "{}",
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 73,
            "description": "A regular expression for finding valid element queries",
            "itemtype": "property",
            "name": "elqSyntax",
            "access": "private",
            "tagname": "",
            "type": "Regexp Object",
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 104,
            "description": "A regular expression for temporarily replacing strings that may contain\ncharacters that break the elqSyntax regular expression ,}) etc.",
            "itemtype": "property",
            "name": "cssString",
            "access": "private",
            "tagname": "",
            "type": "Regexp Object",
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 121,
            "description": "The number of pixels corresponding to one rem at context change time",
            "itemtype": "property",
            "name": "pixelsPerREM",
            "access": "private",
            "tagname": "",
            "type": "Number",
            "default": "undefined",
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 131,
            "description": "An object to store private methods",
            "itemtype": "property",
            "name": "privateMethods",
            "access": "private",
            "tagname": "",
            "type": "Object",
            "default": "{}",
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 141,
            "description": "A function that applies context classes when context changes\nExposed later as elq.respond",
            "itemtype": "property",
            "name": "respond",
            "access": "private",
            "tagname": "",
            "type": "Function",
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 253,
            "description": "Fetch an external CSS link and render it as an inline style element",
            "itemtype": "method",
            "name": "fetchExternalCSS",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "link",
                    "description": "The link to fetch",
                    "type": "DOM Object"
                }
            ],
            "return": {
                "description": "True if link was fetched",
                "type": "Boolean"
            },
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 309,
            "description": "Removes generated style and fetched css from internal cache",
            "itemtype": "method",
            "name": "unfetchExternalCSS",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "link",
                    "description": "The link that was fetched",
                    "type": "DOM Object"
                }
            ],
            "return": {
                "description": "True if style was deleted",
                "type": "Boolean"
            },
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 340,
            "description": "Listen for context change and modify all selectors",
            "itemtype": "method",
            "name": "respondToContext",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "True if any selectors were found",
                "type": "Boolean"
            },
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 379,
            "description": "Parses all CSS and registers found element queries",
            "itemtype": "method",
            "name": "parseCSS",
            "access": "private",
            "tagname": "",
            "return": {
                "description": "True if any element queries were found",
                "type": "Boolean"
            },
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 430,
            "description": "Converts the media query portion of an element query into a condition",
            "itemtype": "method",
            "name": "mediaToCondition",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "media",
                    "description": "The media query portion of the element query",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The modified condition",
                "type": "String"
            },
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 481,
            "description": "Registers an element query",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "selector",
                    "description": "The selector matching this element query",
                    "type": "String"
                },
                {
                    "name": "media",
                    "description": "The media matching this element query",
                    "type": "String"
                },
                {
                    "name": "elqClass",
                    "description": "Optional predetermined class to apply",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The class associated with this element query",
                "type": "String"
            },
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 542,
            "description": "Unregisters an element query",
            "itemtype": "method",
            "name": "unregister",
            "params": [
                {
                    "name": "selector",
                    "description": "The selector matching this element query",
                    "type": "String"
                },
                {
                    "name": "media",
                    "description": "The media matching this element query",
                    "type": "String"
                }
            ],
            "return": {
                "description": "True if selector existed",
                "type": "Boolean"
            },
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 567,
            "description": "Processes the entire page for element queries",
            "itemtype": "method",
            "name": "process",
            "params": [
                {
                    "name": "Option",
                    "description": "array of DOM links to process",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "True",
                "type": "Boolean"
            },
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 594,
            "description": "Loop through each selector and process matching elements\n\nFires an 'elq-change' event if any classes are added or removed by elq.\nCustom event contains:\n  event.detail.contextHeight\n  event.detail.contextWidth\n  event.detail.addedClasses\n  event.detail.removedClasses",
            "itemtype": "method",
            "name": "respond",
            "return": {
                "description": "True if any selectors were found",
                "type": "Boolean"
            },
            "class": "elq"
        },
        {
            "file": "src/elq.src.js",
            "line": 609,
            "description": "Adjust how often a resize/orientation event will throttle",
            "itemtype": "method",
            "name": "respondAfter",
            "params": [
                {
                    "name": "Milliseconds",
                    "description": "after which to render",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Milliseconds after which to render",
                "type": "Number"
            },
            "class": "elq"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: overview",
            "line": " src/elq.src.js:1"
        },
        {
            "message": "unknown tag: copyright",
            "line": " src/elq.src.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " src/elq.src.js:1"
        },
        {
            "message": "Missing item type",
            "line": " src/elq.src.js:1"
        }
    ]
}